name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v0.1.0)'
        required: true
        type: string

permissions:
  contents: write

jobs:
  build:
    name: Build binaries
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            arch: x64
            target: darwin-x64
          - os: macos-latest
            arch: arm64
            target: darwin-arm64
          - os: ubuntu-latest
            arch: x64
            target: linux-x64
          - os: ubuntu-latest
            arch: arm64
            target: linux-arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Build binary
        run: |
          if [ "${{ matrix.os }}" = "macos-latest" ]; then
            if [ "${{ matrix.arch }}" = "arm64" ]; then
              bun build src/index.ts --compile --target=bun-darwin-arm64 --outfile asana-${{ matrix.target }}
            else
              bun build src/index.ts --compile --target=bun-darwin-x64 --outfile asana-${{ matrix.target }}
            fi
          else
            if [ "${{ matrix.arch }}" = "arm64" ]; then
              bun build src/index.ts --compile --target=bun-linux-arm64 --outfile asana-${{ matrix.target }}
            else
              bun build src/index.ts --compile --target=bun-linux-x64 --outfile asana-${{ matrix.target }}
            fi
          fi

      - name: Generate checksum
        run: |
          shasum -a 256 asana-${{ matrix.target }} > asana-${{ matrix.target }}.sha256

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: asana-${{ matrix.target }}
          path: |
            asana-${{ matrix.target }}
            asana-${{ matrix.target }}.sha256

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Prepare release assets
        run: |
          mkdir -p release
          find artifacts -type f -exec cp {} release/ \;
          ls -lh release/

      - name: Get version
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "version=${{ inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.version.outputs.version }}
          name: Release ${{ steps.version.outputs.version }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: release/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  update-homebrew:
    name: Update Homebrew Formula
    needs: release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get version
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "version=${{ inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi

      - name: Update Formula
        run: |
          VERSION=${{ steps.version.outputs.version }}
          VERSION_NO_V=${VERSION#v}

          # Download checksums
          curl -L -o darwin-x64.sha256 \
            "https://github.com/${{ github.repository }}/releases/download/${VERSION}/asana-darwin-x64.sha256"
          curl -L -o darwin-arm64.sha256 \
            "https://github.com/${{ github.repository }}/releases/download/${VERSION}/asana-darwin-arm64.sha256"
          curl -L -o linux-x64.sha256 \
            "https://github.com/${{ github.repository }}/releases/download/${VERSION}/asana-linux-x64.sha256"

          # Extract checksums
          DARWIN_X64_SHA256=$(cat darwin-x64.sha256 | awk '{print $1}')
          DARWIN_ARM64_SHA256=$(cat darwin-arm64.sha256 | awk '{print $1}')
          LINUX_X64_SHA256=$(cat linux-x64.sha256 | awk '{print $1}')

          # Update Formula
          sed -i "s/version \".*\"/version \"${VERSION_NO_V}\"/" Formula/asana-cli.rb
          sed -i "s/sha256 \".*\" # darwin-x64/sha256 \"${DARWIN_X64_SHA256}\" # darwin-x64/" Formula/asana-cli.rb
          sed -i "s/sha256 \".*\" # darwin-arm64/sha256 \"${DARWIN_ARM64_SHA256}\" # darwin-arm64/" Formula/asana-cli.rb
          sed -i "s/sha256 \".*\" # linux-x64/sha256 \"${LINUX_X64_SHA256}\" # linux-x64/" Formula/asana-cli.rb

      - name: Commit and push Formula
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add Formula/asana-cli.rb
          git commit -m "chore: update Homebrew formula to ${{ steps.version.outputs.version }}"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
